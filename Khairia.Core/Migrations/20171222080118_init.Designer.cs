// <auto-generated />
using Khairia.Core.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Khairia.Core.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    [Migration("20171222080118_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("usertest")
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Khairia.Core.Models.ArchiveSacridetails", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID");

                    b.Property<long?>("Number");

                    b.Property<int?>("Sacrid");

                    b.Property<int?>("Soltid");

                    b.Property<string>("Time")
                        .HasMaxLength(50);

                    b.Property<string>("Timename")
                        .HasColumnName("timename")
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .HasMaxLength(50);

                    b.Property<string>("Typename")
                        .HasColumnName("typename")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("archiveSacridetails","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.ArchiveSacrifinames", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<string>("Booknumber")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Gender")
                        .HasColumnName("gender")
                        .HasMaxLength(5);

                    b.Property<string>("Mail")
                        .HasColumnName("mail")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(200);

                    b.Property<int?>("Paytype")
                        .HasColumnName("paytype");

                    b.Property<string>("Place")
                        .HasColumnName("place")
                        .HasMaxLength(50);

                    b.Property<int?>("SacrifiNumber")
                        .HasColumnName("Sacrifi_number");

                    b.Property<int?>("Statues");

                    b.Property<TimeSpan?>("Time")
                        .HasColumnName("time");

                    b.Property<int?>("Year")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("archiveSacrifinames","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.AssetDuration", b =>
                {
                    b.Property<short>("Assdurid")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Durcode")
                        .HasColumnName("durcode");

                    b.Property<int?>("Durcount")
                        .HasColumnName("durcount");

                    b.Property<string>("Durname")
                        .HasColumnName("durname")
                        .HasMaxLength(50);

                    b.Property<int?>("Stat")
                        .HasColumnName("stat");

                    b.HasKey("Assdurid");

                    b.ToTable("AssetDuration","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Assetitems", b =>
                {
                    b.Property<short>("Assetitemid")
                        .ValueGeneratedOnAdd();

                    b.Property<short?>("Assetid")
                        .HasColumnName("assetid");

                    b.Property<string>("Assetname")
                        .HasColumnName("assetname")
                        .HasMaxLength(50);

                    b.Property<int?>("Assetnumber")
                        .HasColumnName("assetnumber");

                    b.Property<string>("Notes")
                        .HasColumnName("notes")
                        .HasColumnType("ntext");

                    b.HasKey("Assetitemid");

                    b.ToTable("Assetitems","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Assets", b =>
                {
                    b.Property<short>("Assetid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Approveddate")
                        .HasColumnName("approveddate")
                        .HasColumnType("datetime");

                    b.Property<short?>("Approvuser")
                        .HasColumnName("approvuser");

                    b.Property<short?>("Assetdetails");

                    b.Property<int?>("Assettype");

                    b.Property<DateTime?>("Canceldate")
                        .HasColumnName("canceldate")
                        .HasColumnType("datetime");

                    b.Property<short?>("Canceluser")
                        .HasColumnName("canceluser");

                    b.Property<short?>("Closed");

                    b.Property<DateTime?>("Closedate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Day")
                        .HasColumnName("day")
                        .HasColumnType("date");

                    b.Property<short?>("Driver")
                        .HasColumnName("driver");

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<int?>("Hour")
                        .HasColumnName("hour");

                    b.Property<string>("Lit")
                        .HasColumnName("lit")
                        .HasMaxLength(50);

                    b.Property<string>("Long")
                        .HasColumnName("long")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .HasColumnName("mobile")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<string>("Notes")
                        .HasColumnType("ntext");

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Recorddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Square")
                        .HasColumnName("square")
                        .HasMaxLength(50);

                    b.Property<int?>("Stat")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("stat")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Assetid");

                    b.ToTable("Assets","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.AssetsOrders", b =>
                {
                    b.Property<short>("Assetorderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("assetorderid");

                    b.Property<string>("Address")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Approveddate")
                        .HasColumnName("approveddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Asset")
                        .HasColumnName("asset")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Canceldate")
                        .HasColumnName("canceldate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Day")
                        .HasColumnName("day")
                        .HasColumnType("date");

                    b.Property<short?>("Driver")
                        .HasColumnName("driver");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(50);

                    b.Property<string>("Hallname")
                        .HasMaxLength(50);

                    b.Property<string>("Hour")
                        .HasColumnName("hour")
                        .HasMaxLength(50);

                    b.Property<string>("Lat")
                        .HasColumnName("lat")
                        .HasMaxLength(50);

                    b.Property<string>("Long")
                        .HasColumnName("long")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .HasColumnName("mobile")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<string>("Notes")
                        .HasColumnType("ntext");

                    b.Property<int?>("Number")
                        .HasColumnName("number");

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Recoreddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Square")
                        .HasColumnName("square")
                        .HasMaxLength(20);

                    b.Property<int?>("Stat")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("stat")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Assetorderid");

                    b.ToTable("AssetsOrders","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Assetstypes", b =>
                {
                    b.Property<int>("Assettype")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Assettypename")
                        .HasMaxLength(50);

                    b.HasKey("Assettype");

                    b.ToTable("Assetstypes","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Availableslotes", b =>
                {
                    b.Property<int>("Availableid")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Availablenumber");

                    b.Property<int?>("Slot")
                        .HasColumnName("slot");

                    b.HasKey("Availableid");

                    b.ToTable("Availableslotes","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Banner", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Path")
                        .HasColumnName("path")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("banner","db_owner");
                });

            modelBuilder.Entity("Khairia.Core.Models.CatchBonds", b =>
                {
                    b.Property<int>("Bondid")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Bonddate")
                        .HasColumnType("date");

                    b.Property<int?>("Sacrid");

                    b.Property<int?>("Userid");

                    b.HasKey("Bondid");

                    b.ToTable("CatchBonds","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Categories", b =>
                {
                    b.Property<short>("Catid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("catid");

                    b.Property<string>("Categoryname")
                        .HasMaxLength(20);

                    b.HasKey("Catid");

                    b.ToTable("Categories","db_owner");
                });

            modelBuilder.Entity("Khairia.Core.Models.Directdistirb", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int?>("Ammount")
                        .HasColumnName("ammount");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<string>("Nid")
                        .HasColumnName("nid")
                        .HasMaxLength(10);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Directdistirb","db_owner");
                });

            modelBuilder.Entity("Khairia.Core.Models.Distribution", b =>
                {
                    b.Property<int>("Reciveid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("reciveid");

                    b.Property<int?>("Ammount")
                        .HasColumnName("ammount");

                    b.Property<string>("Details")
                        .HasColumnName("details")
                        .HasColumnType("ntext");

                    b.Property<string>("Distrname")
                        .HasMaxLength(50);

                    b.Property<string>("Distrpoint")
                        .HasMaxLength(50);

                    b.Property<double?>("Number")
                        .HasColumnName("number");

                    b.Property<string>("Packsize")
                        .HasColumnName("packsize")
                        .HasMaxLength(5);

                    b.Property<string>("Sdsd")
                        .HasColumnName("sdsd")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("Sdsdf")
                        .HasColumnName("sdsdf")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("Wewew")
                        .HasColumnName("wewew")
                        .HasColumnType("nchar(10)");

                    b.HasKey("Reciveid");

                    b.ToTable("Distribution","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Donationsize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int?>("Ammont")
                        .HasColumnName("ammont");

                    b.Property<string>("Donatename")
                        .HasColumnName("donatename")
                        .HasMaxLength(50);

                    b.Property<string>("Ewewew")
                        .HasColumnName("ewewew")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("Werewrewr")
                        .HasColumnName("werewrewr")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("Wewerwer")
                        .HasColumnName("wewerwer")
                        .HasColumnType("nchar(10)");

                    b.HasKey("Id");

                    b.ToTable("donationsize","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Drivers", b =>
                {
                    b.Property<short>("Driverid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("driverid");

                    b.Property<int?>("Category")
                        .HasColumnName("category");

                    b.Property<string>("Drivername")
                        .HasColumnName("drivername")
                        .HasMaxLength(100);

                    b.Property<int?>("Groupid");

                    b.Property<string>("Mobile")
                        .HasColumnName("mobile")
                        .HasMaxLength(10);

                    b.Property<int?>("Type")
                        .HasColumnName("type");

                    b.HasKey("Driverid");

                    b.ToTable("Drivers","db_owner");
                });

            modelBuilder.Entity("Khairia.Core.Models.Driversattendance", b =>
                {
                    b.Property<short>("Attid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("attid");

                    b.Property<DateTime?>("Attdate")
                        .HasColumnName("attdate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Attdatetime")
                        .HasColumnName("attdatetime")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan?>("Atttime")
                        .HasColumnName("atttime");

                    b.Property<int?>("Groupid")
                        .HasColumnName("groupid");

                    b.HasKey("Attid");

                    b.ToTable("Driversattendance","db_owner");
                });

            modelBuilder.Entity("Khairia.Core.Models.Durations", b =>
                {
                    b.Property<short>("Durid")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Code")
                        .HasColumnName("code");

                    b.Property<int?>("Count")
                        .HasColumnName("count");

                    b.Property<string>("Duration")
                        .HasMaxLength(50);

                    b.HasKey("Durid");

                    b.ToTable("Durations","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Employees", b =>
                {
                    b.Property<short>("Empid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("empid");

                    b.Property<string>("Empname")
                        .HasColumnName("empname")
                        .HasMaxLength(100);

                    b.Property<short?>("Sectionid")
                        .HasColumnName("sectionid");

                    b.HasKey("Empid");

                    b.ToTable("Employees","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.EmpsCategries", b =>
                {
                    b.Property<short>("Catid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("catid");

                    b.Property<int?>("Catcode")
                        .HasColumnName("catcode");

                    b.Property<string>("Catname")
                        .HasColumnName("catname")
                        .HasMaxLength(50);

                    b.Property<int?>("Money")
                        .HasColumnName("money");

                    b.HasKey("Catid");

                    b.ToTable("EmpsCategries","db_owner");
                });

            modelBuilder.Entity("Khairia.Core.Models.Groups", b =>
                {
                    b.Property<int>("Groupid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Clolor")
                        .HasMaxLength(50);

                    b.Property<string>("Groupname")
                        .HasColumnName("groupname")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .HasColumnName("mobile")
                        .HasMaxLength(15);

                    b.HasKey("Groupid");

                    b.ToTable("Groups","db_owner");
                });

            modelBuilder.Entity("Khairia.Core.Models.Help1", b =>
                {
                    b.Property<short>("Helpid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("helpid");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(50);

                    b.Property<int?>("Corp")
                        .HasColumnName("corp");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(50);

                    b.Property<int?>("Familynumber")
                        .HasColumnName("familynumber");

                    b.Property<int?>("Food")
                        .HasColumnName("food");

                    b.Property<string>("Idexpire")
                        .HasColumnName("idexpire")
                        .HasMaxLength(50);

                    b.Property<string>("Income")
                        .HasColumnName("income")
                        .HasMaxLength(10);

                    b.Property<string>("Incometype")
                        .HasColumnName("incometype")
                        .HasMaxLength(50);

                    b.Property<string>("Livallaw")
                        .HasColumnName("livallaw")
                        .HasMaxLength(50);

                    b.Property<string>("Livtype")
                        .HasColumnName("livtype")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .HasColumnName("mobile")
                        .HasMaxLength(50);

                    b.Property<int?>("Money")
                        .HasColumnName("money");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<string>("Nid")
                        .HasColumnName("nid")
                        .HasMaxLength(10);

                    b.Property<string>("Notes")
                        .HasColumnName("notes")
                        .HasColumnType("ntext");

                    b.Property<DateTime?>("Orderdate")
                        .HasColumnName("orderdate")
                        .HasColumnType("date");

                    b.Property<string>("Place")
                        .HasColumnName("place")
                        .HasMaxLength(50);

                    b.Property<int?>("Registerme")
                        .HasColumnName("registerme");

                    b.Property<string>("Rent")
                        .HasColumnName("rent")
                        .HasMaxLength(50);

                    b.Property<int?>("Statues")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("statues")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Helpid");

                    b.ToTable("Help1","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Help2", b =>
                {
                    b.Property<short>("Helpid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("helpid");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<string>("Helpnotes")
                        .HasColumnName("helpnotes")
                        .HasColumnType("ntext");

                    b.Property<string>("Helptype")
                        .HasColumnName("helptype")
                        .HasMaxLength(100);

                    b.Property<int?>("Recid");

                    b.Property<int?>("Statues")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("statues")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Things")
                        .HasColumnName("things")
                        .HasMaxLength(200);

                    b.HasKey("Helpid");

                    b.ToTable("Help2","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Items", b =>
                {
                    b.Property<short>("Itemid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("itemid");

                    b.Property<short?>("Category")
                        .HasColumnName("category");

                    b.Property<string>("Itemname")
                        .HasColumnName("itemname")
                        .HasMaxLength(50);

                    b.HasKey("Itemid");

                    b.ToTable("Items","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Marks", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<int?>("Mark")
                        .HasColumnName("mark");

                    b.HasKey("Id");

                    b.ToTable("Marks","db_owner");
                });

            modelBuilder.Entity("Khairia.Core.Models.Marquee", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int?>("Active")
                        .HasColumnName("active");

                    b.Property<string>("Details")
                        .HasColumnName("details")
                        .HasColumnType("ntext");

                    b.Property<string>("Image")
                        .HasColumnName("image")
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Marquee","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Needy", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Pername")
                        .HasColumnName("pername")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasMaxLength(10);

                    b.Property<string>("Sendername")
                        .HasColumnName("sendername")
                        .HasMaxLength(50);

                    b.Property<string>("Senderphone")
                        .HasColumnName("senderphone")
                        .HasMaxLength(10);

                    b.Property<string>("Squer")
                        .HasColumnName("squer")
                        .HasMaxLength(100);

                    b.Property<short?>("Statues")
                        .HasColumnName("statues");

                    b.HasKey("Id");

                    b.ToTable("needy","db_owner");
                });

            modelBuilder.Entity("Khairia.Core.Models.Newsimages", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Imgpath")
                        .HasColumnName("imgpath")
                        .HasMaxLength(100);

                    b.Property<int?>("Newsid")
                        .HasColumnName("newsid");

                    b.HasKey("Id");

                    b.ToTable("Newsimages","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Newstable", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int?>("Active");

                    b.Property<string>("Detail")
                        .HasColumnName("detail")
                        .HasColumnType("ntext");

                    b.Property<DateTime?>("Expire")
                        .HasColumnName("expire")
                        .HasColumnType("date");

                    b.Property<string>("Image")
                        .HasColumnName("image")
                        .HasMaxLength(100);

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("ntext");

                    b.HasKey("Id");

                    b.ToTable("Newstable","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Offdayes", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime?>("Frmdate")
                        .HasColumnName("frmdate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Todate")
                        .HasColumnName("todate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("offdayes","db_owner");
                });

            modelBuilder.Entity("Khairia.Core.Models.OrderEmps", b =>
                {
                    b.Property<short>("Orderempid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("orderempid");

                    b.Property<short?>("Empid")
                        .HasColumnName("empid");

                    b.Property<short?>("Orderid")
                        .HasColumnName("orderid");

                    b.HasKey("Orderempid");

                    b.ToTable("OrderEmps","db_owner");
                });

            modelBuilder.Entity("Khairia.Core.Models.Places", b =>
                {
                    b.Property<int>("Plceid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("Plceid");

                    b.ToTable("Places","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID");

                    b.Property<string>("Rolename")
                        .HasMaxLength(50);

                    b.HasKey("RoleId");

                    b.ToTable("Roles","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Sacridetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<long?>("Number");

                    b.Property<int?>("Sacrid");

                    b.Property<int?>("Soltid");

                    b.Property<string>("Time")
                        .HasMaxLength(50);

                    b.Property<string>("Timename")
                        .HasColumnName("timename")
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .HasMaxLength(50);

                    b.Property<string>("Typename")
                        .HasColumnName("typename")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Sacridetails","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Sacridetails60", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<long?>("Number");

                    b.Property<int?>("Sacrid");

                    b.Property<int?>("Soltid");

                    b.Property<string>("Time")
                        .HasMaxLength(50);

                    b.Property<string>("Timename")
                        .HasColumnName("timename")
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .HasMaxLength(50);

                    b.Property<string>("Typename")
                        .HasColumnName("typename")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Sacridetails60","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Sacrifinames", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Booknumber")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Gender")
                        .HasColumnName("gender")
                        .HasMaxLength(5);

                    b.Property<string>("Mail")
                        .HasColumnName("mail")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(200);

                    b.Property<int?>("Paytype")
                        .HasColumnName("paytype");

                    b.Property<string>("Place")
                        .HasColumnName("place")
                        .HasMaxLength(50);

                    b.Property<int?>("SacrifiNumber")
                        .HasColumnName("Sacrifi_number");

                    b.Property<int?>("Statues");

                    b.Property<TimeSpan?>("Time")
                        .HasColumnName("time");

                    b.HasKey("Id");

                    b.ToTable("Sacrifinames","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Sacrifinames6000", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Booknumber")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Gender")
                        .HasColumnName("gender")
                        .HasMaxLength(5);

                    b.Property<string>("Mail")
                        .HasColumnName("mail")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(200);

                    b.Property<string>("Place")
                        .HasColumnName("place")
                        .HasMaxLength(50);

                    b.Property<int?>("SacrifiNumber")
                        .HasColumnName("Sacrifi_number");

                    b.Property<int?>("Statues");

                    b.Property<TimeSpan?>("Time")
                        .HasColumnName("time");

                    b.HasKey("Id");

                    b.ToTable("Sacrifinames6000","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Saidabout", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Sign")
                        .HasColumnName("sign")
                        .HasColumnType("ntext");

                    b.Property<string>("Speech")
                        .HasColumnName("speech")
                        .HasColumnType("ntext");

                    b.HasKey("Id");

                    b.ToTable("Saidabout","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Saidattach", b =>
                {
                    b.Property<short>("Saboutatt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("saboutatt");

                    b.Property<string>("Image")
                        .HasColumnName("image")
                        .HasMaxLength(100);

                    b.Property<string>("Imagename")
                        .HasColumnName("imagename")
                        .HasMaxLength(50);

                    b.Property<short?>("Saidid")
                        .HasColumnName("saidid");

                    b.HasKey("Saboutatt");

                    b.ToTable("saidattach","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Salaries", b =>
                {
                    b.Property<short>("Salid")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Fromdate")
                        .HasColumnName("fromdate")
                        .HasColumnType("date");

                    b.Property<int?>("Satues");

                    b.Property<DateTime?>("Todate")
                        .HasColumnType("date");

                    b.HasKey("Salid");

                    b.ToTable("Salaries","db_owner");
                });

            modelBuilder.Entity("Khairia.Core.Models.Sections", b =>
                {
                    b.Property<int>("Sectionid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Sectionname")
                        .HasColumnName("sectionname")
                        .HasMaxLength(50);

                    b.HasKey("Sectionid");

                    b.ToTable("Sections","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.SentNumbers", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<string>("Message")
                        .HasColumnName("message")
                        .HasColumnType("ntext");

                    b.Property<string>("Number")
                        .HasColumnName("number")
                        .HasMaxLength(10);

                    b.Property<int?>("Type")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("SentNumbers","db_owner");
                });

            modelBuilder.Entity("Khairia.Core.Models.Shipments", b =>
                {
                    b.Property<short>("Shipid")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Shipdate")
                        .HasColumnType("date");

                    b.Property<string>("Shipmobile")
                        .HasMaxLength(50);

                    b.Property<string>("Shipname")
                        .HasMaxLength(50);

                    b.Property<int?>("Shipnumber");

                    b.HasKey("Shipid");

                    b.ToTable("Shipments","db_owner");
                });

            modelBuilder.Entity("Khairia.Core.Models.Slidertbl", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<short?>("Active")
                        .HasColumnName("active");

                    b.Property<string>("Imagepath")
                        .HasColumnName("imagepath")
                        .HasMaxLength(100);

                    b.Property<string>("Titile")
                        .HasColumnName("titile")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Slidertbl","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Solts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Day")
                        .HasMaxLength(50);

                    b.Property<int?>("Number")
                        .HasColumnName("number");

                    b.Property<string>("Price")
                        .HasColumnName("price")
                        .HasMaxLength(10);

                    b.Property<string>("Soltname")
                        .HasColumnName("soltname")
                        .HasMaxLength(50);

                    b.Property<string>("Time")
                        .HasMaxLength(50);

                    b.Property<int?>("Total");

                    b.HasKey("Id");

                    b.ToTable("Solts","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Stratigyrates", b =>
                {
                    b.Property<short>("Rateid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rateid");

                    b.Property<int?>("Firstweek")
                        .HasColumnName("firstweek");

                    b.Property<int?>("Four")
                        .HasColumnName("four");

                    b.Property<int?>("Month")
                        .HasColumnName("month");

                    b.Property<int?>("Secondweek")
                        .HasColumnName("secondweek");

                    b.Property<short?>("Strategid")
                        .HasColumnName("strategid");

                    b.Property<int?>("Third")
                        .HasColumnName("third");

                    b.Property<int?>("Year")
                        .HasColumnName("year");

                    b.HasKey("Rateid");

                    b.ToTable("Stratigyrates","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Targets", b =>
                {
                    b.Property<short>("Targitid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("targitid");

                    b.Property<string>("Targetname")
                        .HasColumnName("targetname")
                        .HasColumnType("ntext");

                    b.Property<int?>("Targetsectionid")
                        .HasColumnName("targetsectionid");

                    b.HasKey("Targitid");

                    b.ToTable("Targets","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Tasks", b =>
                {
                    b.Property<short>("Stratgyid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("stratgyid");

                    b.Property<string>("Cost")
                        .HasColumnName("cost")
                        .HasMaxLength(50);

                    b.Property<string>("Employees")
                        .HasColumnName("employees")
                        .HasColumnType("ntext");

                    b.Property<string>("Empsvalue")
                        .HasColumnName("empsvalue")
                        .HasColumnType("ntext");

                    b.Property<string>("Enddate")
                        .HasColumnName("enddate")
                        .HasMaxLength(50);

                    b.Property<int?>("Number")
                        .HasColumnName("number");

                    b.Property<string>("Start")
                        .HasColumnName("start")
                        .HasMaxLength(50);

                    b.Property<string>("Straname")
                        .HasColumnName("straname")
                        .HasColumnType("ntext");

                    b.Property<string>("Supervalues")
                        .HasColumnName("supervalues")
                        .HasColumnType("ntext");

                    b.Property<string>("Superviser")
                        .HasColumnName("superviser")
                        .HasColumnType("ntext");

                    b.Property<short?>("Targetid")
                        .HasColumnName("targetid");

                    b.Property<short?>("Unitid")
                        .HasColumnName("unitid");

                    b.HasKey("Stratgyid");

                    b.ToTable("tasks","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Unites", b =>
                {
                    b.Property<short>("Unitid")
                        .ValueGeneratedOnAdd();

                    b.Property<short?>("Sectionid")
                        .HasColumnName("sectionid");

                    b.Property<string>("Unitname")
                        .HasColumnName("unitname")
                        .HasMaxLength(100);

                    b.HasKey("Unitid");

                    b.ToTable("Unites","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("User_id");

                    b.Property<string>("Password")
                        .HasMaxLength(50);

                    b.Property<int?>("Roleid");

                    b.Property<string>("Userfullname")
                        .HasMaxLength(50);

                    b.Property<string>("Username")
                        .HasMaxLength(50);

                    b.Property<string>("Userphone")
                        .HasMaxLength(50);

                    b.HasKey("UserId");

                    b.ToTable("Users","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Utilitiesprofile", b =>
                {
                    b.Property<short>("Uprofileid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<int?>("Rol")
                        .HasColumnName("rol");

                    b.Property<string>("Uid")
                        .HasMaxLength(50);

                    b.Property<string>("Upass")
                        .HasMaxLength(10);

                    b.Property<int?>("Urecid");

                    b.HasKey("Uprofileid");

                    b.ToTable("Utilitiesprofile","dbo");
                });

            modelBuilder.Entity("Khairia.Core.Models.Volunteerapp", b =>
                {
                    b.Property<short>("Appid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("appid");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(100);

                    b.Property<string>("Certifcates")
                        .HasColumnName("certifcates")
                        .HasColumnType("ntext");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<string>("Dayes")
                        .HasColumnName("dayes")
                        .HasMaxLength(200);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(50);

                    b.Property<string>("Fields")
                        .HasColumnName("fields")
                        .HasColumnType("ntext");

                    b.Property<string>("Houres")
                        .HasColumnName("houres")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .HasColumnName("mobile")
                        .HasMaxLength(15);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<string>("Natinality")
                        .HasColumnName("natinality")
                        .HasMaxLength(50);

                    b.Property<string>("Nid")
                        .HasColumnName("nid")
                        .HasMaxLength(10);

                    b.Property<string>("Skils")
                        .HasColumnName("skils")
                        .HasColumnType("ntext");

                    b.Property<string>("Time")
                        .HasColumnName("time")
                        .HasMaxLength(5);

                    b.Property<string>("Workallaw")
                        .HasColumnName("workallaw")
                        .HasMaxLength(10);

                    b.HasKey("Appid");

                    b.ToTable("volunteerapp","db_owner");
                });

            modelBuilder.Entity("Khairia.Core.Models.Volunteerfields", b =>
                {
                    b.Property<int>("Voluntid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("voluntid");

                    b.Property<string>("Voluntname")
                        .HasColumnName("voluntname")
                        .HasMaxLength(100);

                    b.HasKey("Voluntid");

                    b.ToTable("Volunteerfields","db_owner");
                });

            modelBuilder.Entity("Khairia.Core.Models.Weekdayes", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Name")
                        .HasMaxLength(100);

                    b.Property<string>("AName")
                        .HasColumnName("AName")
                        .HasMaxLength(100);

                    b.Property<short>("State");

                    b.HasKey("Name");

                    b.ToTable("Weekdayes","db_owner");
                });
#pragma warning restore 612, 618
        }
    }
}
